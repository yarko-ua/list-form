{"version":3,"sources":["components/List/List.js","components/ShowArrays/ShowArrays.js","components/form/Form.js","components/Main/Main.js","App.js","serviceWorker.js","index.js"],"names":["List","props","list","map","item","i","key","className","onClick","funcDone","funcDelete","ShowArrays","state","value","onAddItem","bind","onChangeValue","onMakeDone","onDelete","e","this","setState","target","console","log","parentNode","classList","add","index","indexOf","innerText","splice","type","onChange","disabled","React","Component","Form","handleSubmit","handleName","handlePassword","handleCheck","handleMail","name","password","email","checked","validation","errorName","errorPassword","errorMail","preventDefault","alert","match","includes","length","onSubmit","placeholder","id","htmlFor","Main","href","App","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e0864b38.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction List(props) {\r\n    return (\r\n        <ul>\r\n            {props.list.map((item, i) => (  // чого кругli дужки\r\n                <li key={i} >\r\n                    {item}\r\n\r\n                    <i className=\"fas fa-check btn btn-done\"\r\n                        onClick={props.funcDone}\r\n                    >\r\n                    </i>\r\n\r\n                    <i className=\"fas fa-window-close btn btn-delete\"\r\n                        onClick={props.funcDelete}\r\n                    >\r\n                    </i>\r\n\r\n                </li >\r\n            ))\r\n            }\r\n        </ul >\r\n    );\r\n}\r\n\r\n\r\nexport default List","import React from 'react';\r\nimport List from '../List/List';\r\n\r\n\r\nclass ShowArrays extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: '',\r\n            list: ['Зробити ToDo List', 'Зробити стилі'],\r\n        };\r\n        this.onAddItem = this.onAddItem.bind(this);\r\n        this.onChangeValue = this.onChangeValue.bind(this);\r\n        this.onMakeDone = this.onMakeDone.bind(this);\r\n        this.onDelete = this.onDelete.bind(this);\r\n    }\r\n    onChangeValue(e) {\r\n        this.setState({ value: e.target.value });\r\n    };\r\n    onAddItem() {\r\n        this.setState(state => {\r\n            const list = [...state.list, state.value];\r\n            return {\r\n                list,\r\n                value: '',\r\n            };\r\n        });\r\n        console.log(this.state.list);\r\n    };\r\n    onMakeDone(e) {\r\n        let li = e.target.parentNode;\r\n        li.classList.add('done');\r\n        // let index = this.state.list.indexOf(li.innerText);\r\n        // this.setState(\r\n        //     this.state.list.splice(index, 1)\r\n        // );\r\n        // this.setState(state => {\r\n        //     const list = [...state.list, li.innerText];\r\n        //     return {\r\n        //         list,\r\n        //         value: '',\r\n        //     };\r\n        // });\r\n\r\n    };\r\n    onDelete(e) {\r\n        let index = this.state.list.indexOf(e.target.parentNode.innerText);\r\n        console.log(index);\r\n        this.setState(\r\n            this.state.list.splice(index, 1)\r\n        );\r\n    };\r\n    render() {\r\n        return (\r\n            <div>\r\n                <List list={this.state.list} funcDone={this.onMakeDone} funcDelete={this.onDelete} />\r\n                <input\r\n                    type=\"text\"\r\n                    value={this.state.value}\r\n                    onChange={this.onChangeValue}\r\n                />\r\n                <button\r\n                    className=\"btn-add\"\r\n                    type=\"button\"\r\n                    onClick={this.onAddItem}\r\n                    disabled={!this.state.value}\r\n                >\r\n                    Add\r\n               </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default ShowArrays","import React from 'react';\r\n\r\nclass Form extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleName = this.handleName.bind(this);\r\n        this.handlePassword = this.handlePassword.bind(this);\r\n        this.handleCheck = this.handleCheck.bind(this);\r\n        this.handleMail = this.handleMail.bind(this);\r\n        this.state = {\r\n            name: '',\r\n            password: '',\r\n            email: '',\r\n            checked: false,\r\n            validation: false,\r\n            errorName: '',\r\n            errorPassword: '',\r\n            errorMail: '',\r\n        }\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        let validation;\r\n        if (!this.state.name || this.state.name === ' ') {\r\n            validation = false;\r\n        } else if (!this.state.password || this.state.password === ' ') {\r\n            validation = false;\r\n\r\n        } else if (!this.state.checked) {\r\n            validation = false;\r\n\r\n        } else if (!this.state.email || this.state.email === ' ') {\r\n            validation = false;\r\n        } else {\r\n            validation = true;\r\n        };\r\n\r\n        this.setState({ validation: validation })\r\n        if (validation) alert(`You are awesome!`);\r\n\r\n    }\r\n\r\n    handleName(e) {\r\n        if (e.target.value.match(/\\d+/)) {\r\n            this.setState({\r\n                errorName: 'Numbers is forbidden',\r\n                name: '',\r\n            })\r\n        } else if (!e.target.value.match(/\\d+/)) {\r\n            this.setState({\r\n                errorName: '',\r\n                name: e.target.value\r\n            })\r\n        };\r\n    };\r\n\r\n    handlePassword(e) {\r\n        this.setState({\r\n\r\n        })\r\n        if (e.target.value.includes('{')) {\r\n            this.setState({\r\n                errorPassword: '\\'{\\' sign is forbidden',\r\n                password: ''\r\n            })\r\n        } else if (!e.target.value.includes('{')) {\r\n            this.setState({\r\n                errorPassword: '',\r\n                password: e.target.value\r\n            })\r\n        };\r\n        console.log(this.state.password);\r\n        console.log(e.target.value.length);\r\n    };\r\n\r\n    handleCheck(e) {\r\n        this.setState({\r\n            checked: !this.state.checked\r\n        })\r\n        console.log(this.state.checked)\r\n    };\r\n\r\n    handleMail(e) {\r\n        if (!e.target.value.match(/^.+@.+\\..+$/igm)) {\r\n            this.setState({\r\n                errorMail: 'Not correct email',\r\n                email: ''\r\n            })\r\n        } else if (e.target.value.match(/^.+@.+\\..+$/igm)) {\r\n            this.setState({\r\n                errorMail: '',\r\n                email: e.target.value\r\n            })\r\n        };\r\n        console.log(this.state.email)\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <input type=\"text\" name=\"name\" onChange={this.handleName}\r\n                    // value={this.state.name}\r\n                    placeholder=\"your name\" />\r\n                <p>{this.state.errorName}</p>\r\n                <input type=\"text\" name=\"password\" onChange={this.handlePassword}\r\n                    // value={this.state.password}\r\n                    placeholder=\"password\" />\r\n                <p>{this.state.errorPassword}</p>\r\n                <input type=\"text\" name=\"email\"\r\n                    onChange={this.handleMail}\r\n                    placeholder=\"email@inbox.com\"\r\n                />\r\n                <p>{this.state.errorMail}</p>\r\n                <div className=\"checkBox\">\r\n                    <input type=\"checkbox\" name=\"checkbox\" id=\"checkbox\" onChange={this.handleCheck}\r\n                        checked={this.state.checked} />\r\n                    <label htmlFor=\"checkbox\">Keep me signed in</label>\r\n                </div>\r\n                <button type=\"submit\">SIGN IN</button>\r\n            </form>\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Form","import React from 'react';\r\nimport ShowArrays from '../ShowArrays/ShowArrays';\r\nimport Form from '../form/Form';\r\n\r\nfunction Main() {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"ToDoList\">\r\n                <h1 className=\"title\">To Do List:</h1>\r\n                <ShowArrays />\r\n            </div>\r\n            <div className=\"LoginForm\">\r\n                <h1>sign in to your account</h1>\r\n                <Form />\r\n                <a href=\"https://yarko-ua.github.io/boot/\">Forgot your password?</a>\r\n            </div>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default Main","import React from 'react';\nimport './App.scss';\nimport Main from './components/Main/Main';\n\nfunction App() {\n  return (\n    <>\n      <Main />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}